/*
 * Copyright (c) 2016, prpl Foundation
 * 
 * Permission to use, copy, modify, and/or distribute this software for any purpose with or without 
 * fee is hereby granted, provided that the above copyright notice and this permission notice appear 
 * in all copies.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE
 * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE 
 * FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM 
 * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, 
 * ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 * 
 * This code was written by Carlos Moratelli at Embedded System Group (GSE) at PUCRS/Brazil.
 * 
 */
 
 /* 
 * This is a configuration sample for a system configuration of 4 VMs. 
 *
 * VMs called ping and pong performs interVM communication. Blink VM blinks the LED1.
 * Tcp-listener VM accepts TCP incoming connections and it replies ping requests. This setup
 * is useful to show the fast interrupt delivery policy. Ping requests sent by a host
 * should not suffer huge delays when the tcp-listener is compiled with the 'fast_interrupts' option. 
 * 
 * To compile this example, modify the variable CFG_FILE on the 
 * Makefile to point to this file. 
 *
 */

 
/* General system configuration */
system = {
    debug =  [ "WARNINGS", "INFOS", "ERRORS"];
    platform = { 
        cpu = "M5150";
        platform_str = "Microchip Starter Kit";
        system_clock = 200000000;
    };
    uart_speed = 115200;
    scheduler_quantum_ms = 10;
}; 


/* Virtual Machines Configuration */
virtual_machines = (
{ 
        app_name = "ping";
	os_type = "BARE_METAL";
        RAM_size_bytes = "MEM_SIZE_32KB";
        flash_size_bytes = "MEM_SIZE_32KB";
        memory_maps = ({
                base_addr = 0xbf822000;
                page_size = "MEM_SIZE_4KB";
            })
},
{ 
        app_name = "pong";
	os_type = "BARE_METAL";
        RAM_size_bytes = "MEM_SIZE_32KB";
        flash_size_bytes = "MEM_SIZE_32KB";
        memory_maps = ({
                base_addr = 0xbf822000;
                page_size = "MEM_SIZE_4KB";
            })
},
    { 
        app_name = "tcp-listener";
	os_type = "BARE_METAL";
        RAM_size_bytes = "MEM_SIZE_128KB";
        flash_size_bytes = "MEM_SIZE_128KB";
        #fast_interrupts = [ "IRQ_ETH" ];
        memory_maps = ({
            base_addr = 0xbf822000;
            page_size = "MEM_SIZE_4KB";
        })
    },
{ 
        app_name = "blink";
	os_type = "BARE_METAL";
        RAM_size_bytes = "MEM_SIZE_32KB";
        flash_size_bytes = "MEM_SIZE_32KB";
        device_mapping = [ "PORTH", "UART2"];
})

    
    